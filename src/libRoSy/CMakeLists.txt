file(GLOB SOURCES "src/*.cpp")

add_library(RoSy STATIC ${SOURCES})


# Define headers for this library. PUBLIC headers are used for
# compiling the library, and will be added to consumers' build
# paths.
target_include_directories(
	RoSy PUBLIC 
	$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
	$<INSTALL_INTERFACE:include>
	${EIGEN3_INCLUDE_DIR}
	PRIVATE src)

target_link_libraries( RoSy 
	Field
	Geom)


# This makes the project importable from the build directory
export( TARGETS RoSy
	FILE RoSyLibraryConfig.cmake)


# Every library has unit tests, of course

# GTest requires pthreads
# find_package( Threads REQUIRED )
#find_package( GTest REQUIRED )

# Include specific tests
# include_directories("${GTEST_INCLUDE_DIRS}")

file( GLOB TEST_SOURCES "tests/*.cpp" )
add_executable(
	testRoSy
    ${TEST_SOURCES})

target_link_libraries(testRoSy 
	RoSy gtest gmock)

add_test( NAME ZeroLengthVectorsShouldThrow COMMAND testVectorAngles --gtest_filter=ZeroLengthVectorsShouldThrow)

add_test( NAME IdenticalVectorsShouldReturnZero COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.IdenticalVectorsShouldReturnZero)
add_test( NAME TestVectorAngle45DegreesShouldReturnPIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test45DegreesShouldReturnPIOverFour)
add_test( NAME TestVectorAngle90DegreesShouldReturnPIOverTwo COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test90DegreesShouldReturnPIOverTwo)
add_test( NAME TestVectorAngle135DegreesShouldReturnThreePIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test135DegreesShouldReturnThreePIOverFour)
add_test( NAME TestVectorAngle180DegreesShouldReturnPI COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test180DegreesShouldReturnPI)
add_test( NAME TestVectorAngle225DegreesShouldReturnThreePIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test225DegreesShouldReturnThreePIOverFour)
add_test( NAME TestVectorAngle270DegreesShouldReturnPIOverTwo COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test270DegreesShouldReturnPIOverTwo)
add_test( NAME TestVectorAngle315DegreesShouldReturnPIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test315DegreesShouldReturnPIOverFour)
add_test( NAME TestVectorAngle360DegreesShouldReturnZero COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test360DegreesShouldReturnZero)
add_test( NAME TestVectorAngle45DegreesInYPlaneShouldReturnPIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test45DegreesInYPlaneShouldReturnPIOverFour)
add_test( NAME TestVectorAngle90DegreesInYPlaneShouldReturnPIOverTwo COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test90DegreesInYPlaneShouldReturnPIOverTwo)
add_test( NAME TestVectorAngle135DegreesInYPlaneShouldReturnThreePIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test135DegreesInYPlaneShouldReturnThreePIOverFour)
add_test( NAME TestVectorAngle225DegreesInYPlaneShouldReturnThreePIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test225DegreesInYPlaneShouldReturnThreePIOverFour)
add_test( NAME TestVectorAngle270DegreesInYPlaneShouldReturnPIOverTwo COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test270DegreesInYPlaneShouldReturnPIOverTwo)
add_test( NAME TestVectorAngle315DegreesInYPlaneShouldReturnPIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test315DegreesInYPlaneShouldReturnPIOverFour)
add_test( NAME TestVectorAngle45DegreesInXPlaneShouldReturnPIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test45DegreesInXPlaneShouldReturnPIOverFour)
add_test( NAME TestVectorAngle135DegreesInXPlaneShouldReturnThreePIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test135DegreesInXPlaneShouldReturnThreePIOverFour)
add_test( NAME TestVectorAngle180DegreesInXPlaneShouldReturnPI COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test180DegreesInXPlaneShouldReturnPI)
add_test( NAME TestVectorAngle225DegreesInXPlaneShouldReturnThreePIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test225DegreesInXPlaneShouldReturnThreePIOverFour)
add_test( NAME TestVectorAngle315DegreesInXPlaneShouldReturnPIOverFour COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test315DegreesInXPlaneShouldReturnPIOverFour)
add_test( NAME TestVectorAngle360DegreesInXPlaneShouldReturnZero COMMAND testVectorAngles --gtest_filter=TestAngleBetweenVectors.Test360DegreesInXPlaneShouldReturnZero)

add_test( NAME TestVectorRotationZeroLengthOShouldThrow COMMAND testVectorAngles --gtest_filter=TestVectorRotation.ZeroLengthOShouldThrow)
add_test( NAME TestVectorRotationNonUnitNormalShouldThrow COMMAND testVectorAngles --gtest_filter=TestVectorRotation.NonUnitNormalShouldThrow)
add_test( NAME TestVectorRotationRotate_2_1_0_about_0_0_1_by_0 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_2_1_0_about_0_0_1_by_0)
add_test( NAME TestVectorRotationRotate_2_1_0_about_0_0_1_by_1 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_2_1_0_about_0_0_1_by_1)
add_test( NAME TestVectorRotationRotate_2_1_0_about_0_0_1_by_2 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_2_1_0_about_0_0_1_by_2)
add_test( NAME TestVectorRotationRotate_2_1_0_about_0_0_1_by_3 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_2_1_0_about_0_0_1_by_3)
add_test( NAME TestVectorRotationRotate_2_0_1_about_0_1_0_by_0 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_2_0_1_about_0_1_0_by_0)
add_test( NAME TestVectorRotationRotate_2_0_1_about_0_1_0_by_1 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_2_0_1_about_0_1_0_by_1)
add_test( NAME TestVectorRotationRotate_2_0_1_about_0_1_0_by_2 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_2_0_1_about_0_1_0_by_2)
add_test( NAME TestVectorRotationRotate_2_0_1_about_0_1_0_by_3 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_2_0_1_about_0_1_0_by_3)
add_test( NAME TestVectorRotationRotate_0_1_2_about_1_0_0_by_0 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_0_1_2_about_1_0_0_by_0)
add_test( NAME TestVectorRotationRotate_0_1_2_about_1_0_0_by_1 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_0_1_2_about_1_0_0_by_1)
add_test( NAME TestVectorRotationRotate_0_1_2_about_1_0_0_by_2 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_0_1_2_about_1_0_0_by_2)
add_test( NAME TestVectorRotationRotate_0_1_2_about_1_0_0_by_3 COMMAND testVectorAngles --gtest_filter=TestVectorRotation.Rotate_0_1_2_about_1_0_0_by_3)

add_test( NAME TestMinimiseKLShouldThrowIfN1IsNotUnitVector COMMAND testVectorAngles --gtest_filter=TestVectorRotation.ShouldThrowIfN1IsNotUnitVector)
add_test( NAME TestMinimiseKLShouldThrowIfO1IsZero COMMAND testVectorAngles --gtest_filter=TestVectorRotation.ShouldThrowIfO1IsZero)
add_test( NAME TestMinimiseKLShouldThrowIfN2IsNotUnitVector COMMAND testVectorAngles --gtest_filter=TestVectorRotation.ShouldThrowIfN2IsNotUnitVector)
add_test( NAME TestMinimiseKLShouldThrowIfO2IsZero COMMAND testVectorAngles --gtest_filter=TestVectorRotation.ShouldThrowIfO2IsZero)
add_test( NAME TestMinimiseKLShouldBe_0_0_For_0_DegreesCoplanar COMMAND testVectorAngles --gtest_filter=TestVectorRotation.ShouldBe_0_0_For_0_DegreesCoplanar)
add_test( NAME TestMinimiseKLShouldBe_0_0_For_30_DegreesCoplanar COMMAND testVectorAngles --gtest_filter=TestVectorRotation.ShouldBe_0_0_For_30_DegreesCoplanar)
add_test( NAME TestMinimiseKLShouldBe_0_0_For_45_DegreesCoplanar COMMAND testVectorAngles --gtest_filter=TestVectorRotation.ShouldBe_0_0_For_45_DegreesCoplanar)
add_test( NAME TestMinimiseKLShouldBe_0_1_For_60_DegreesCoplanar COMMAND testVectorAngles --gtest_filter=TestVectorRotation.ShouldBe_0_1_For_60_DegreesCoplanar)


# Need Eigen3
find_package(Eigen3 REQUIRED)
include_directories(${EIGEN3_INCLUDE_DIR})


# Stash it
install(TARGETS testRoSy DESTINATION bin)

